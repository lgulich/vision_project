classdef EstimatedStates < robotics.ros.Message
    %EstimatedStates MATLAB implementation of ascento_msgs/EstimatedStates
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2018 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'ascento_msgs/EstimatedStates' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '6b697e022a39982d84b21e3a8b82b280' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        StdMsgsHeaderClass = robotics.ros.msg.internal.MessageFactory.getClassForType('std_msgs/Header') % Dispatch to MATLAB class for message type std_msgs/Header
    end
    
    properties (Dependent)
        Header
        EstMotPosLeft
        EstMotPosRight
        EstMotVelLeft
        EstMotVelRight
        EstHipPosLeft
        EstHipPosRight
        EstHipVelLeft
        EstHipVelRight
        EstHipTorqueLeft
        EstHipTorqueRight
        EstImuPosRoll
        EstImuPosPitch
        EstImuPosYaw
        EstImuVelRoll
        EstImuVelPitch
        EstImuVelYaw
        EstImuLinAccX
        EstImuLinAccY
        EstImuLinAccZ
        EstWheelPosLeft
        EstWheelPosRight
        EstWheelVelLeft
        EstWheelVelRight
        EstWheelPosLeftPrev
        EstWheelPosRightPrev
        EstThetaLeft
        EstThetaRight
        EstThetaMean
        EstThetaDotMean
        EstFiltThetaDotMean
        EstLinVel
        EstFiltCalLinVel
        EstFiltLinVel
        EstAngVel
        EstFiltAngVel
        EstRobotXPos
        EstRobotYPos
        EstRobotGammaOrient
        EstRobotXPosPrev
        EstRobotYPosPrev
        EstRobotGammaOrientPrev
        EstRobotRho
        EstRobotPsi
        EstRobotBeta
        EstRobotSPos
        EstImuDriftYaw
        EstImuPitchOffset
        EstImuPitchOffsetCadError
        EstFiltMotPosLeft
        EstFiltMotPosRight
        EstFiltMotPosLeftPrev
        EstFiltMotPosRightPrev
        EstMotPosAve
        EstMotVelAve
        EstTerarangerLeftDist
        EstTerarangerRightDist
        EstTerarangerLeftDistPrev
        EstTerarangerRightDistPrev
        EstAirTimeSteps
    end
    
    properties (Access = protected)
        Cache = struct('Header', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'EstAirTimeSteps', 'EstAngVel', 'EstFiltAngVel', 'EstFiltCalLinVel', 'EstFiltLinVel', 'EstFiltMotPosLeft', 'EstFiltMotPosLeftPrev', 'EstFiltMotPosRight', 'EstFiltMotPosRightPrev', 'EstFiltThetaDotMean', 'EstHipPosLeft', 'EstHipPosRight', 'EstHipTorqueLeft', 'EstHipTorqueRight', 'EstHipVelLeft', 'EstHipVelRight', 'EstImuDriftYaw', 'EstImuLinAccX', 'EstImuLinAccY', 'EstImuLinAccZ', 'EstImuPitchOffset', 'EstImuPitchOffsetCadError', 'EstImuPosPitch', 'EstImuPosRoll', 'EstImuPosYaw', 'EstImuVelPitch', 'EstImuVelRoll', 'EstImuVelYaw', 'EstLinVel', 'EstMotPosAve', 'EstMotPosLeft', 'EstMotPosRight', 'EstMotVelAve', 'EstMotVelLeft', 'EstMotVelRight', 'EstRobotBeta', 'EstRobotGammaOrient', 'EstRobotGammaOrientPrev', 'EstRobotPsi', 'EstRobotRho', 'EstRobotSPos', 'EstRobotXPos', 'EstRobotXPosPrev', 'EstRobotYPos', 'EstRobotYPosPrev', 'EstTerarangerLeftDist', 'EstTerarangerLeftDistPrev', 'EstTerarangerRightDist', 'EstTerarangerRightDistPrev', 'EstThetaDotMean', 'EstThetaLeft', 'EstThetaMean', 'EstThetaRight', 'EstWheelPosLeft', 'EstWheelPosLeftPrev', 'EstWheelPosRight', 'EstWheelPosRightPrev', 'EstWheelVelLeft', 'EstWheelVelRight', 'Header'} % List of non-constant message properties
        ROSPropertyList = {'est_air_time_steps', 'est_ang_vel', 'est_filt_ang_vel', 'est_filt_cal_lin_vel', 'est_filt_lin_vel', 'est_filt_mot_pos_left', 'est_filt_mot_pos_left_prev', 'est_filt_mot_pos_right', 'est_filt_mot_pos_right_prev', 'est_filt_theta_dot_mean', 'est_hip_pos_left', 'est_hip_pos_right', 'est_hip_torque_left', 'est_hip_torque_right', 'est_hip_vel_left', 'est_hip_vel_right', 'est_imu_drift_yaw', 'est_imu_lin_acc_x', 'est_imu_lin_acc_y', 'est_imu_lin_acc_z', 'est_imu_pitch_offset', 'est_imu_pitch_offset_cad_error', 'est_imu_pos_pitch', 'est_imu_pos_roll', 'est_imu_pos_yaw', 'est_imu_vel_pitch', 'est_imu_vel_roll', 'est_imu_vel_yaw', 'est_lin_vel', 'est_mot_pos_ave', 'est_mot_pos_left', 'est_mot_pos_right', 'est_mot_vel_ave', 'est_mot_vel_left', 'est_mot_vel_right', 'est_robot_beta', 'est_robot_gamma_orient', 'est_robot_gamma_orient_prev', 'est_robot_psi', 'est_robot_rho', 'est_robot_s_pos', 'est_robot_x_pos', 'est_robot_x_pos_prev', 'est_robot_y_pos', 'est_robot_y_pos_prev', 'est_teraranger_left_dist', 'est_teraranger_left_dist_prev', 'est_teraranger_right_dist', 'est_teraranger_right_dist_prev', 'est_theta_dot_mean', 'est_theta_left', 'est_theta_mean', 'est_theta_right', 'est_wheel_pos_left', 'est_wheel_pos_left_prev', 'est_wheel_pos_right', 'est_wheel_pos_right_prev', 'est_wheel_vel_left', 'est_wheel_vel_right', 'header'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = EstimatedStates(msg)
            %EstimatedStates Construct the message object EstimatedStates
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function header = get.Header(obj)
            %get.Header Get the value for property Header
            if isempty(obj.Cache.Header)
                obj.Cache.Header = feval(obj.StdMsgsHeaderClass, obj.JavaMessage.getHeader);
            end
            header = obj.Cache.Header;
        end
        
        function set.Header(obj, header)
            %set.Header Set the value for property Header
            validateattributes(header, {obj.StdMsgsHeaderClass}, {'nonempty', 'scalar'}, 'EstimatedStates', 'Header');
            
            obj.JavaMessage.setHeader(header.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Header)
                obj.Cache.Header.setJavaObject(header.getJavaObject);
            end
        end
        
        function estmotposleft = get.EstMotPosLeft(obj)
            %get.EstMotPosLeft Get the value for property EstMotPosLeft
            estmotposleft = single(obj.JavaMessage.getEstMotPosLeft);
        end
        
        function set.EstMotPosLeft(obj, estmotposleft)
            %set.EstMotPosLeft Set the value for property EstMotPosLeft
            validateattributes(estmotposleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotPosLeft');
            
            obj.JavaMessage.setEstMotPosLeft(estmotposleft);
        end
        
        function estmotposright = get.EstMotPosRight(obj)
            %get.EstMotPosRight Get the value for property EstMotPosRight
            estmotposright = single(obj.JavaMessage.getEstMotPosRight);
        end
        
        function set.EstMotPosRight(obj, estmotposright)
            %set.EstMotPosRight Set the value for property EstMotPosRight
            validateattributes(estmotposright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotPosRight');
            
            obj.JavaMessage.setEstMotPosRight(estmotposright);
        end
        
        function estmotvelleft = get.EstMotVelLeft(obj)
            %get.EstMotVelLeft Get the value for property EstMotVelLeft
            estmotvelleft = single(obj.JavaMessage.getEstMotVelLeft);
        end
        
        function set.EstMotVelLeft(obj, estmotvelleft)
            %set.EstMotVelLeft Set the value for property EstMotVelLeft
            validateattributes(estmotvelleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotVelLeft');
            
            obj.JavaMessage.setEstMotVelLeft(estmotvelleft);
        end
        
        function estmotvelright = get.EstMotVelRight(obj)
            %get.EstMotVelRight Get the value for property EstMotVelRight
            estmotvelright = single(obj.JavaMessage.getEstMotVelRight);
        end
        
        function set.EstMotVelRight(obj, estmotvelright)
            %set.EstMotVelRight Set the value for property EstMotVelRight
            validateattributes(estmotvelright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotVelRight');
            
            obj.JavaMessage.setEstMotVelRight(estmotvelright);
        end
        
        function esthipposleft = get.EstHipPosLeft(obj)
            %get.EstHipPosLeft Get the value for property EstHipPosLeft
            esthipposleft = single(obj.JavaMessage.getEstHipPosLeft);
        end
        
        function set.EstHipPosLeft(obj, esthipposleft)
            %set.EstHipPosLeft Set the value for property EstHipPosLeft
            validateattributes(esthipposleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipPosLeft');
            
            obj.JavaMessage.setEstHipPosLeft(esthipposleft);
        end
        
        function esthipposright = get.EstHipPosRight(obj)
            %get.EstHipPosRight Get the value for property EstHipPosRight
            esthipposright = single(obj.JavaMessage.getEstHipPosRight);
        end
        
        function set.EstHipPosRight(obj, esthipposright)
            %set.EstHipPosRight Set the value for property EstHipPosRight
            validateattributes(esthipposright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipPosRight');
            
            obj.JavaMessage.setEstHipPosRight(esthipposright);
        end
        
        function esthipvelleft = get.EstHipVelLeft(obj)
            %get.EstHipVelLeft Get the value for property EstHipVelLeft
            esthipvelleft = single(obj.JavaMessage.getEstHipVelLeft);
        end
        
        function set.EstHipVelLeft(obj, esthipvelleft)
            %set.EstHipVelLeft Set the value for property EstHipVelLeft
            validateattributes(esthipvelleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipVelLeft');
            
            obj.JavaMessage.setEstHipVelLeft(esthipvelleft);
        end
        
        function esthipvelright = get.EstHipVelRight(obj)
            %get.EstHipVelRight Get the value for property EstHipVelRight
            esthipvelright = single(obj.JavaMessage.getEstHipVelRight);
        end
        
        function set.EstHipVelRight(obj, esthipvelright)
            %set.EstHipVelRight Set the value for property EstHipVelRight
            validateattributes(esthipvelright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipVelRight');
            
            obj.JavaMessage.setEstHipVelRight(esthipvelright);
        end
        
        function esthiptorqueleft = get.EstHipTorqueLeft(obj)
            %get.EstHipTorqueLeft Get the value for property EstHipTorqueLeft
            esthiptorqueleft = single(obj.JavaMessage.getEstHipTorqueLeft);
        end
        
        function set.EstHipTorqueLeft(obj, esthiptorqueleft)
            %set.EstHipTorqueLeft Set the value for property EstHipTorqueLeft
            validateattributes(esthiptorqueleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipTorqueLeft');
            
            obj.JavaMessage.setEstHipTorqueLeft(esthiptorqueleft);
        end
        
        function esthiptorqueright = get.EstHipTorqueRight(obj)
            %get.EstHipTorqueRight Get the value for property EstHipTorqueRight
            esthiptorqueright = single(obj.JavaMessage.getEstHipTorqueRight);
        end
        
        function set.EstHipTorqueRight(obj, esthiptorqueright)
            %set.EstHipTorqueRight Set the value for property EstHipTorqueRight
            validateattributes(esthiptorqueright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstHipTorqueRight');
            
            obj.JavaMessage.setEstHipTorqueRight(esthiptorqueright);
        end
        
        function estimuposroll = get.EstImuPosRoll(obj)
            %get.EstImuPosRoll Get the value for property EstImuPosRoll
            estimuposroll = single(obj.JavaMessage.getEstImuPosRoll);
        end
        
        function set.EstImuPosRoll(obj, estimuposroll)
            %set.EstImuPosRoll Set the value for property EstImuPosRoll
            validateattributes(estimuposroll, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuPosRoll');
            
            obj.JavaMessage.setEstImuPosRoll(estimuposroll);
        end
        
        function estimupospitch = get.EstImuPosPitch(obj)
            %get.EstImuPosPitch Get the value for property EstImuPosPitch
            estimupospitch = single(obj.JavaMessage.getEstImuPosPitch);
        end
        
        function set.EstImuPosPitch(obj, estimupospitch)
            %set.EstImuPosPitch Set the value for property EstImuPosPitch
            validateattributes(estimupospitch, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuPosPitch');
            
            obj.JavaMessage.setEstImuPosPitch(estimupospitch);
        end
        
        function estimuposyaw = get.EstImuPosYaw(obj)
            %get.EstImuPosYaw Get the value for property EstImuPosYaw
            estimuposyaw = single(obj.JavaMessage.getEstImuPosYaw);
        end
        
        function set.EstImuPosYaw(obj, estimuposyaw)
            %set.EstImuPosYaw Set the value for property EstImuPosYaw
            validateattributes(estimuposyaw, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuPosYaw');
            
            obj.JavaMessage.setEstImuPosYaw(estimuposyaw);
        end
        
        function estimuvelroll = get.EstImuVelRoll(obj)
            %get.EstImuVelRoll Get the value for property EstImuVelRoll
            estimuvelroll = single(obj.JavaMessage.getEstImuVelRoll);
        end
        
        function set.EstImuVelRoll(obj, estimuvelroll)
            %set.EstImuVelRoll Set the value for property EstImuVelRoll
            validateattributes(estimuvelroll, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuVelRoll');
            
            obj.JavaMessage.setEstImuVelRoll(estimuvelroll);
        end
        
        function estimuvelpitch = get.EstImuVelPitch(obj)
            %get.EstImuVelPitch Get the value for property EstImuVelPitch
            estimuvelpitch = single(obj.JavaMessage.getEstImuVelPitch);
        end
        
        function set.EstImuVelPitch(obj, estimuvelpitch)
            %set.EstImuVelPitch Set the value for property EstImuVelPitch
            validateattributes(estimuvelpitch, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuVelPitch');
            
            obj.JavaMessage.setEstImuVelPitch(estimuvelpitch);
        end
        
        function estimuvelyaw = get.EstImuVelYaw(obj)
            %get.EstImuVelYaw Get the value for property EstImuVelYaw
            estimuvelyaw = single(obj.JavaMessage.getEstImuVelYaw);
        end
        
        function set.EstImuVelYaw(obj, estimuvelyaw)
            %set.EstImuVelYaw Set the value for property EstImuVelYaw
            validateattributes(estimuvelyaw, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuVelYaw');
            
            obj.JavaMessage.setEstImuVelYaw(estimuvelyaw);
        end
        
        function estimulinaccx = get.EstImuLinAccX(obj)
            %get.EstImuLinAccX Get the value for property EstImuLinAccX
            estimulinaccx = single(obj.JavaMessage.getEstImuLinAccX);
        end
        
        function set.EstImuLinAccX(obj, estimulinaccx)
            %set.EstImuLinAccX Set the value for property EstImuLinAccX
            validateattributes(estimulinaccx, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuLinAccX');
            
            obj.JavaMessage.setEstImuLinAccX(estimulinaccx);
        end
        
        function estimulinaccy = get.EstImuLinAccY(obj)
            %get.EstImuLinAccY Get the value for property EstImuLinAccY
            estimulinaccy = single(obj.JavaMessage.getEstImuLinAccY);
        end
        
        function set.EstImuLinAccY(obj, estimulinaccy)
            %set.EstImuLinAccY Set the value for property EstImuLinAccY
            validateattributes(estimulinaccy, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuLinAccY');
            
            obj.JavaMessage.setEstImuLinAccY(estimulinaccy);
        end
        
        function estimulinaccz = get.EstImuLinAccZ(obj)
            %get.EstImuLinAccZ Get the value for property EstImuLinAccZ
            estimulinaccz = single(obj.JavaMessage.getEstImuLinAccZ);
        end
        
        function set.EstImuLinAccZ(obj, estimulinaccz)
            %set.EstImuLinAccZ Set the value for property EstImuLinAccZ
            validateattributes(estimulinaccz, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuLinAccZ');
            
            obj.JavaMessage.setEstImuLinAccZ(estimulinaccz);
        end
        
        function estwheelposleft = get.EstWheelPosLeft(obj)
            %get.EstWheelPosLeft Get the value for property EstWheelPosLeft
            estwheelposleft = single(obj.JavaMessage.getEstWheelPosLeft);
        end
        
        function set.EstWheelPosLeft(obj, estwheelposleft)
            %set.EstWheelPosLeft Set the value for property EstWheelPosLeft
            validateattributes(estwheelposleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelPosLeft');
            
            obj.JavaMessage.setEstWheelPosLeft(estwheelposleft);
        end
        
        function estwheelposright = get.EstWheelPosRight(obj)
            %get.EstWheelPosRight Get the value for property EstWheelPosRight
            estwheelposright = single(obj.JavaMessage.getEstWheelPosRight);
        end
        
        function set.EstWheelPosRight(obj, estwheelposright)
            %set.EstWheelPosRight Set the value for property EstWheelPosRight
            validateattributes(estwheelposright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelPosRight');
            
            obj.JavaMessage.setEstWheelPosRight(estwheelposright);
        end
        
        function estwheelvelleft = get.EstWheelVelLeft(obj)
            %get.EstWheelVelLeft Get the value for property EstWheelVelLeft
            estwheelvelleft = single(obj.JavaMessage.getEstWheelVelLeft);
        end
        
        function set.EstWheelVelLeft(obj, estwheelvelleft)
            %set.EstWheelVelLeft Set the value for property EstWheelVelLeft
            validateattributes(estwheelvelleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelVelLeft');
            
            obj.JavaMessage.setEstWheelVelLeft(estwheelvelleft);
        end
        
        function estwheelvelright = get.EstWheelVelRight(obj)
            %get.EstWheelVelRight Get the value for property EstWheelVelRight
            estwheelvelright = single(obj.JavaMessage.getEstWheelVelRight);
        end
        
        function set.EstWheelVelRight(obj, estwheelvelright)
            %set.EstWheelVelRight Set the value for property EstWheelVelRight
            validateattributes(estwheelvelright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelVelRight');
            
            obj.JavaMessage.setEstWheelVelRight(estwheelvelright);
        end
        
        function estwheelposleftprev = get.EstWheelPosLeftPrev(obj)
            %get.EstWheelPosLeftPrev Get the value for property EstWheelPosLeftPrev
            estwheelposleftprev = single(obj.JavaMessage.getEstWheelPosLeftPrev);
        end
        
        function set.EstWheelPosLeftPrev(obj, estwheelposleftprev)
            %set.EstWheelPosLeftPrev Set the value for property EstWheelPosLeftPrev
            validateattributes(estwheelposleftprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelPosLeftPrev');
            
            obj.JavaMessage.setEstWheelPosLeftPrev(estwheelposleftprev);
        end
        
        function estwheelposrightprev = get.EstWheelPosRightPrev(obj)
            %get.EstWheelPosRightPrev Get the value for property EstWheelPosRightPrev
            estwheelposrightprev = single(obj.JavaMessage.getEstWheelPosRightPrev);
        end
        
        function set.EstWheelPosRightPrev(obj, estwheelposrightprev)
            %set.EstWheelPosRightPrev Set the value for property EstWheelPosRightPrev
            validateattributes(estwheelposrightprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstWheelPosRightPrev');
            
            obj.JavaMessage.setEstWheelPosRightPrev(estwheelposrightprev);
        end
        
        function estthetaleft = get.EstThetaLeft(obj)
            %get.EstThetaLeft Get the value for property EstThetaLeft
            estthetaleft = single(obj.JavaMessage.getEstThetaLeft);
        end
        
        function set.EstThetaLeft(obj, estthetaleft)
            %set.EstThetaLeft Set the value for property EstThetaLeft
            validateattributes(estthetaleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstThetaLeft');
            
            obj.JavaMessage.setEstThetaLeft(estthetaleft);
        end
        
        function estthetaright = get.EstThetaRight(obj)
            %get.EstThetaRight Get the value for property EstThetaRight
            estthetaright = single(obj.JavaMessage.getEstThetaRight);
        end
        
        function set.EstThetaRight(obj, estthetaright)
            %set.EstThetaRight Set the value for property EstThetaRight
            validateattributes(estthetaright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstThetaRight');
            
            obj.JavaMessage.setEstThetaRight(estthetaright);
        end
        
        function estthetamean = get.EstThetaMean(obj)
            %get.EstThetaMean Get the value for property EstThetaMean
            estthetamean = single(obj.JavaMessage.getEstThetaMean);
        end
        
        function set.EstThetaMean(obj, estthetamean)
            %set.EstThetaMean Set the value for property EstThetaMean
            validateattributes(estthetamean, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstThetaMean');
            
            obj.JavaMessage.setEstThetaMean(estthetamean);
        end
        
        function estthetadotmean = get.EstThetaDotMean(obj)
            %get.EstThetaDotMean Get the value for property EstThetaDotMean
            estthetadotmean = single(obj.JavaMessage.getEstThetaDotMean);
        end
        
        function set.EstThetaDotMean(obj, estthetadotmean)
            %set.EstThetaDotMean Set the value for property EstThetaDotMean
            validateattributes(estthetadotmean, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstThetaDotMean');
            
            obj.JavaMessage.setEstThetaDotMean(estthetadotmean);
        end
        
        function estfiltthetadotmean = get.EstFiltThetaDotMean(obj)
            %get.EstFiltThetaDotMean Get the value for property EstFiltThetaDotMean
            estfiltthetadotmean = single(obj.JavaMessage.getEstFiltThetaDotMean);
        end
        
        function set.EstFiltThetaDotMean(obj, estfiltthetadotmean)
            %set.EstFiltThetaDotMean Set the value for property EstFiltThetaDotMean
            validateattributes(estfiltthetadotmean, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltThetaDotMean');
            
            obj.JavaMessage.setEstFiltThetaDotMean(estfiltthetadotmean);
        end
        
        function estlinvel = get.EstLinVel(obj)
            %get.EstLinVel Get the value for property EstLinVel
            estlinvel = single(obj.JavaMessage.getEstLinVel);
        end
        
        function set.EstLinVel(obj, estlinvel)
            %set.EstLinVel Set the value for property EstLinVel
            validateattributes(estlinvel, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstLinVel');
            
            obj.JavaMessage.setEstLinVel(estlinvel);
        end
        
        function estfiltcallinvel = get.EstFiltCalLinVel(obj)
            %get.EstFiltCalLinVel Get the value for property EstFiltCalLinVel
            estfiltcallinvel = single(obj.JavaMessage.getEstFiltCalLinVel);
        end
        
        function set.EstFiltCalLinVel(obj, estfiltcallinvel)
            %set.EstFiltCalLinVel Set the value for property EstFiltCalLinVel
            validateattributes(estfiltcallinvel, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltCalLinVel');
            
            obj.JavaMessage.setEstFiltCalLinVel(estfiltcallinvel);
        end
        
        function estfiltlinvel = get.EstFiltLinVel(obj)
            %get.EstFiltLinVel Get the value for property EstFiltLinVel
            estfiltlinvel = single(obj.JavaMessage.getEstFiltLinVel);
        end
        
        function set.EstFiltLinVel(obj, estfiltlinvel)
            %set.EstFiltLinVel Set the value for property EstFiltLinVel
            validateattributes(estfiltlinvel, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltLinVel');
            
            obj.JavaMessage.setEstFiltLinVel(estfiltlinvel);
        end
        
        function estangvel = get.EstAngVel(obj)
            %get.EstAngVel Get the value for property EstAngVel
            estangvel = single(obj.JavaMessage.getEstAngVel);
        end
        
        function set.EstAngVel(obj, estangvel)
            %set.EstAngVel Set the value for property EstAngVel
            validateattributes(estangvel, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstAngVel');
            
            obj.JavaMessage.setEstAngVel(estangvel);
        end
        
        function estfiltangvel = get.EstFiltAngVel(obj)
            %get.EstFiltAngVel Get the value for property EstFiltAngVel
            estfiltangvel = single(obj.JavaMessage.getEstFiltAngVel);
        end
        
        function set.EstFiltAngVel(obj, estfiltangvel)
            %set.EstFiltAngVel Set the value for property EstFiltAngVel
            validateattributes(estfiltangvel, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltAngVel');
            
            obj.JavaMessage.setEstFiltAngVel(estfiltangvel);
        end
        
        function estrobotxpos = get.EstRobotXPos(obj)
            %get.EstRobotXPos Get the value for property EstRobotXPos
            estrobotxpos = single(obj.JavaMessage.getEstRobotXPos);
        end
        
        function set.EstRobotXPos(obj, estrobotxpos)
            %set.EstRobotXPos Set the value for property EstRobotXPos
            validateattributes(estrobotxpos, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotXPos');
            
            obj.JavaMessage.setEstRobotXPos(estrobotxpos);
        end
        
        function estrobotypos = get.EstRobotYPos(obj)
            %get.EstRobotYPos Get the value for property EstRobotYPos
            estrobotypos = single(obj.JavaMessage.getEstRobotYPos);
        end
        
        function set.EstRobotYPos(obj, estrobotypos)
            %set.EstRobotYPos Set the value for property EstRobotYPos
            validateattributes(estrobotypos, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotYPos');
            
            obj.JavaMessage.setEstRobotYPos(estrobotypos);
        end
        
        function estrobotgammaorient = get.EstRobotGammaOrient(obj)
            %get.EstRobotGammaOrient Get the value for property EstRobotGammaOrient
            estrobotgammaorient = single(obj.JavaMessage.getEstRobotGammaOrient);
        end
        
        function set.EstRobotGammaOrient(obj, estrobotgammaorient)
            %set.EstRobotGammaOrient Set the value for property EstRobotGammaOrient
            validateattributes(estrobotgammaorient, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotGammaOrient');
            
            obj.JavaMessage.setEstRobotGammaOrient(estrobotgammaorient);
        end
        
        function estrobotxposprev = get.EstRobotXPosPrev(obj)
            %get.EstRobotXPosPrev Get the value for property EstRobotXPosPrev
            estrobotxposprev = single(obj.JavaMessage.getEstRobotXPosPrev);
        end
        
        function set.EstRobotXPosPrev(obj, estrobotxposprev)
            %set.EstRobotXPosPrev Set the value for property EstRobotXPosPrev
            validateattributes(estrobotxposprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotXPosPrev');
            
            obj.JavaMessage.setEstRobotXPosPrev(estrobotxposprev);
        end
        
        function estrobotyposprev = get.EstRobotYPosPrev(obj)
            %get.EstRobotYPosPrev Get the value for property EstRobotYPosPrev
            estrobotyposprev = single(obj.JavaMessage.getEstRobotYPosPrev);
        end
        
        function set.EstRobotYPosPrev(obj, estrobotyposprev)
            %set.EstRobotYPosPrev Set the value for property EstRobotYPosPrev
            validateattributes(estrobotyposprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotYPosPrev');
            
            obj.JavaMessage.setEstRobotYPosPrev(estrobotyposprev);
        end
        
        function estrobotgammaorientprev = get.EstRobotGammaOrientPrev(obj)
            %get.EstRobotGammaOrientPrev Get the value for property EstRobotGammaOrientPrev
            estrobotgammaorientprev = single(obj.JavaMessage.getEstRobotGammaOrientPrev);
        end
        
        function set.EstRobotGammaOrientPrev(obj, estrobotgammaorientprev)
            %set.EstRobotGammaOrientPrev Set the value for property EstRobotGammaOrientPrev
            validateattributes(estrobotgammaorientprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotGammaOrientPrev');
            
            obj.JavaMessage.setEstRobotGammaOrientPrev(estrobotgammaorientprev);
        end
        
        function estrobotrho = get.EstRobotRho(obj)
            %get.EstRobotRho Get the value for property EstRobotRho
            estrobotrho = single(obj.JavaMessage.getEstRobotRho);
        end
        
        function set.EstRobotRho(obj, estrobotrho)
            %set.EstRobotRho Set the value for property EstRobotRho
            validateattributes(estrobotrho, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotRho');
            
            obj.JavaMessage.setEstRobotRho(estrobotrho);
        end
        
        function estrobotpsi = get.EstRobotPsi(obj)
            %get.EstRobotPsi Get the value for property EstRobotPsi
            estrobotpsi = single(obj.JavaMessage.getEstRobotPsi);
        end
        
        function set.EstRobotPsi(obj, estrobotpsi)
            %set.EstRobotPsi Set the value for property EstRobotPsi
            validateattributes(estrobotpsi, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotPsi');
            
            obj.JavaMessage.setEstRobotPsi(estrobotpsi);
        end
        
        function estrobotbeta = get.EstRobotBeta(obj)
            %get.EstRobotBeta Get the value for property EstRobotBeta
            estrobotbeta = single(obj.JavaMessage.getEstRobotBeta);
        end
        
        function set.EstRobotBeta(obj, estrobotbeta)
            %set.EstRobotBeta Set the value for property EstRobotBeta
            validateattributes(estrobotbeta, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotBeta');
            
            obj.JavaMessage.setEstRobotBeta(estrobotbeta);
        end
        
        function estrobotspos = get.EstRobotSPos(obj)
            %get.EstRobotSPos Get the value for property EstRobotSPos
            estrobotspos = single(obj.JavaMessage.getEstRobotSPos);
        end
        
        function set.EstRobotSPos(obj, estrobotspos)
            %set.EstRobotSPos Set the value for property EstRobotSPos
            validateattributes(estrobotspos, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstRobotSPos');
            
            obj.JavaMessage.setEstRobotSPos(estrobotspos);
        end
        
        function estimudriftyaw = get.EstImuDriftYaw(obj)
            %get.EstImuDriftYaw Get the value for property EstImuDriftYaw
            estimudriftyaw = single(obj.JavaMessage.getEstImuDriftYaw);
        end
        
        function set.EstImuDriftYaw(obj, estimudriftyaw)
            %set.EstImuDriftYaw Set the value for property EstImuDriftYaw
            validateattributes(estimudriftyaw, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuDriftYaw');
            
            obj.JavaMessage.setEstImuDriftYaw(estimudriftyaw);
        end
        
        function estimupitchoffset = get.EstImuPitchOffset(obj)
            %get.EstImuPitchOffset Get the value for property EstImuPitchOffset
            estimupitchoffset = single(obj.JavaMessage.getEstImuPitchOffset);
        end
        
        function set.EstImuPitchOffset(obj, estimupitchoffset)
            %set.EstImuPitchOffset Set the value for property EstImuPitchOffset
            validateattributes(estimupitchoffset, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuPitchOffset');
            
            obj.JavaMessage.setEstImuPitchOffset(estimupitchoffset);
        end
        
        function estimupitchoffsetcaderror = get.EstImuPitchOffsetCadError(obj)
            %get.EstImuPitchOffsetCadError Get the value for property EstImuPitchOffsetCadError
            estimupitchoffsetcaderror = single(obj.JavaMessage.getEstImuPitchOffsetCadError);
        end
        
        function set.EstImuPitchOffsetCadError(obj, estimupitchoffsetcaderror)
            %set.EstImuPitchOffsetCadError Set the value for property EstImuPitchOffsetCadError
            validateattributes(estimupitchoffsetcaderror, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstImuPitchOffsetCadError');
            
            obj.JavaMessage.setEstImuPitchOffsetCadError(estimupitchoffsetcaderror);
        end
        
        function estfiltmotposleft = get.EstFiltMotPosLeft(obj)
            %get.EstFiltMotPosLeft Get the value for property EstFiltMotPosLeft
            estfiltmotposleft = single(obj.JavaMessage.getEstFiltMotPosLeft);
        end
        
        function set.EstFiltMotPosLeft(obj, estfiltmotposleft)
            %set.EstFiltMotPosLeft Set the value for property EstFiltMotPosLeft
            validateattributes(estfiltmotposleft, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltMotPosLeft');
            
            obj.JavaMessage.setEstFiltMotPosLeft(estfiltmotposleft);
        end
        
        function estfiltmotposright = get.EstFiltMotPosRight(obj)
            %get.EstFiltMotPosRight Get the value for property EstFiltMotPosRight
            estfiltmotposright = single(obj.JavaMessage.getEstFiltMotPosRight);
        end
        
        function set.EstFiltMotPosRight(obj, estfiltmotposright)
            %set.EstFiltMotPosRight Set the value for property EstFiltMotPosRight
            validateattributes(estfiltmotposright, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltMotPosRight');
            
            obj.JavaMessage.setEstFiltMotPosRight(estfiltmotposright);
        end
        
        function estfiltmotposleftprev = get.EstFiltMotPosLeftPrev(obj)
            %get.EstFiltMotPosLeftPrev Get the value for property EstFiltMotPosLeftPrev
            estfiltmotposleftprev = single(obj.JavaMessage.getEstFiltMotPosLeftPrev);
        end
        
        function set.EstFiltMotPosLeftPrev(obj, estfiltmotposleftprev)
            %set.EstFiltMotPosLeftPrev Set the value for property EstFiltMotPosLeftPrev
            validateattributes(estfiltmotposleftprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltMotPosLeftPrev');
            
            obj.JavaMessage.setEstFiltMotPosLeftPrev(estfiltmotposleftprev);
        end
        
        function estfiltmotposrightprev = get.EstFiltMotPosRightPrev(obj)
            %get.EstFiltMotPosRightPrev Get the value for property EstFiltMotPosRightPrev
            estfiltmotposrightprev = single(obj.JavaMessage.getEstFiltMotPosRightPrev);
        end
        
        function set.EstFiltMotPosRightPrev(obj, estfiltmotposrightprev)
            %set.EstFiltMotPosRightPrev Set the value for property EstFiltMotPosRightPrev
            validateattributes(estfiltmotposrightprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstFiltMotPosRightPrev');
            
            obj.JavaMessage.setEstFiltMotPosRightPrev(estfiltmotposrightprev);
        end
        
        function estmotposave = get.EstMotPosAve(obj)
            %get.EstMotPosAve Get the value for property EstMotPosAve
            estmotposave = single(obj.JavaMessage.getEstMotPosAve);
        end
        
        function set.EstMotPosAve(obj, estmotposave)
            %set.EstMotPosAve Set the value for property EstMotPosAve
            validateattributes(estmotposave, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotPosAve');
            
            obj.JavaMessage.setEstMotPosAve(estmotposave);
        end
        
        function estmotvelave = get.EstMotVelAve(obj)
            %get.EstMotVelAve Get the value for property EstMotVelAve
            estmotvelave = single(obj.JavaMessage.getEstMotVelAve);
        end
        
        function set.EstMotVelAve(obj, estmotvelave)
            %set.EstMotVelAve Set the value for property EstMotVelAve
            validateattributes(estmotvelave, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstMotVelAve');
            
            obj.JavaMessage.setEstMotVelAve(estmotvelave);
        end
        
        function estterarangerleftdist = get.EstTerarangerLeftDist(obj)
            %get.EstTerarangerLeftDist Get the value for property EstTerarangerLeftDist
            estterarangerleftdist = single(obj.JavaMessage.getEstTerarangerLeftDist);
        end
        
        function set.EstTerarangerLeftDist(obj, estterarangerleftdist)
            %set.EstTerarangerLeftDist Set the value for property EstTerarangerLeftDist
            validateattributes(estterarangerleftdist, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstTerarangerLeftDist');
            
            obj.JavaMessage.setEstTerarangerLeftDist(estterarangerleftdist);
        end
        
        function estterarangerrightdist = get.EstTerarangerRightDist(obj)
            %get.EstTerarangerRightDist Get the value for property EstTerarangerRightDist
            estterarangerrightdist = single(obj.JavaMessage.getEstTerarangerRightDist);
        end
        
        function set.EstTerarangerRightDist(obj, estterarangerrightdist)
            %set.EstTerarangerRightDist Set the value for property EstTerarangerRightDist
            validateattributes(estterarangerrightdist, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstTerarangerRightDist');
            
            obj.JavaMessage.setEstTerarangerRightDist(estterarangerrightdist);
        end
        
        function estterarangerleftdistprev = get.EstTerarangerLeftDistPrev(obj)
            %get.EstTerarangerLeftDistPrev Get the value for property EstTerarangerLeftDistPrev
            estterarangerleftdistprev = single(obj.JavaMessage.getEstTerarangerLeftDistPrev);
        end
        
        function set.EstTerarangerLeftDistPrev(obj, estterarangerleftdistprev)
            %set.EstTerarangerLeftDistPrev Set the value for property EstTerarangerLeftDistPrev
            validateattributes(estterarangerleftdistprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstTerarangerLeftDistPrev');
            
            obj.JavaMessage.setEstTerarangerLeftDistPrev(estterarangerleftdistprev);
        end
        
        function estterarangerrightdistprev = get.EstTerarangerRightDistPrev(obj)
            %get.EstTerarangerRightDistPrev Get the value for property EstTerarangerRightDistPrev
            estterarangerrightdistprev = single(obj.JavaMessage.getEstTerarangerRightDistPrev);
        end
        
        function set.EstTerarangerRightDistPrev(obj, estterarangerrightdistprev)
            %set.EstTerarangerRightDistPrev Set the value for property EstTerarangerRightDistPrev
            validateattributes(estterarangerrightdistprev, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstTerarangerRightDistPrev');
            
            obj.JavaMessage.setEstTerarangerRightDistPrev(estterarangerrightdistprev);
        end
        
        function estairtimesteps = get.EstAirTimeSteps(obj)
            %get.EstAirTimeSteps Get the value for property EstAirTimeSteps
            estairtimesteps = single(obj.JavaMessage.getEstAirTimeSteps);
        end
        
        function set.EstAirTimeSteps(obj, estairtimesteps)
            %set.EstAirTimeSteps Set the value for property EstAirTimeSteps
            validateattributes(estairtimesteps, {'numeric'}, {'nonempty', 'scalar'}, 'EstimatedStates', 'EstAirTimeSteps');
            
            obj.JavaMessage.setEstAirTimeSteps(estairtimesteps);
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.Header = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.EstMotPosLeft = obj.EstMotPosLeft;
            cpObj.EstMotPosRight = obj.EstMotPosRight;
            cpObj.EstMotVelLeft = obj.EstMotVelLeft;
            cpObj.EstMotVelRight = obj.EstMotVelRight;
            cpObj.EstHipPosLeft = obj.EstHipPosLeft;
            cpObj.EstHipPosRight = obj.EstHipPosRight;
            cpObj.EstHipVelLeft = obj.EstHipVelLeft;
            cpObj.EstHipVelRight = obj.EstHipVelRight;
            cpObj.EstHipTorqueLeft = obj.EstHipTorqueLeft;
            cpObj.EstHipTorqueRight = obj.EstHipTorqueRight;
            cpObj.EstImuPosRoll = obj.EstImuPosRoll;
            cpObj.EstImuPosPitch = obj.EstImuPosPitch;
            cpObj.EstImuPosYaw = obj.EstImuPosYaw;
            cpObj.EstImuVelRoll = obj.EstImuVelRoll;
            cpObj.EstImuVelPitch = obj.EstImuVelPitch;
            cpObj.EstImuVelYaw = obj.EstImuVelYaw;
            cpObj.EstImuLinAccX = obj.EstImuLinAccX;
            cpObj.EstImuLinAccY = obj.EstImuLinAccY;
            cpObj.EstImuLinAccZ = obj.EstImuLinAccZ;
            cpObj.EstWheelPosLeft = obj.EstWheelPosLeft;
            cpObj.EstWheelPosRight = obj.EstWheelPosRight;
            cpObj.EstWheelVelLeft = obj.EstWheelVelLeft;
            cpObj.EstWheelVelRight = obj.EstWheelVelRight;
            cpObj.EstWheelPosLeftPrev = obj.EstWheelPosLeftPrev;
            cpObj.EstWheelPosRightPrev = obj.EstWheelPosRightPrev;
            cpObj.EstThetaLeft = obj.EstThetaLeft;
            cpObj.EstThetaRight = obj.EstThetaRight;
            cpObj.EstThetaMean = obj.EstThetaMean;
            cpObj.EstThetaDotMean = obj.EstThetaDotMean;
            cpObj.EstFiltThetaDotMean = obj.EstFiltThetaDotMean;
            cpObj.EstLinVel = obj.EstLinVel;
            cpObj.EstFiltCalLinVel = obj.EstFiltCalLinVel;
            cpObj.EstFiltLinVel = obj.EstFiltLinVel;
            cpObj.EstAngVel = obj.EstAngVel;
            cpObj.EstFiltAngVel = obj.EstFiltAngVel;
            cpObj.EstRobotXPos = obj.EstRobotXPos;
            cpObj.EstRobotYPos = obj.EstRobotYPos;
            cpObj.EstRobotGammaOrient = obj.EstRobotGammaOrient;
            cpObj.EstRobotXPosPrev = obj.EstRobotXPosPrev;
            cpObj.EstRobotYPosPrev = obj.EstRobotYPosPrev;
            cpObj.EstRobotGammaOrientPrev = obj.EstRobotGammaOrientPrev;
            cpObj.EstRobotRho = obj.EstRobotRho;
            cpObj.EstRobotPsi = obj.EstRobotPsi;
            cpObj.EstRobotBeta = obj.EstRobotBeta;
            cpObj.EstRobotSPos = obj.EstRobotSPos;
            cpObj.EstImuDriftYaw = obj.EstImuDriftYaw;
            cpObj.EstImuPitchOffset = obj.EstImuPitchOffset;
            cpObj.EstImuPitchOffsetCadError = obj.EstImuPitchOffsetCadError;
            cpObj.EstFiltMotPosLeft = obj.EstFiltMotPosLeft;
            cpObj.EstFiltMotPosRight = obj.EstFiltMotPosRight;
            cpObj.EstFiltMotPosLeftPrev = obj.EstFiltMotPosLeftPrev;
            cpObj.EstFiltMotPosRightPrev = obj.EstFiltMotPosRightPrev;
            cpObj.EstMotPosAve = obj.EstMotPosAve;
            cpObj.EstMotVelAve = obj.EstMotVelAve;
            cpObj.EstTerarangerLeftDist = obj.EstTerarangerLeftDist;
            cpObj.EstTerarangerRightDist = obj.EstTerarangerRightDist;
            cpObj.EstTerarangerLeftDistPrev = obj.EstTerarangerLeftDistPrev;
            cpObj.EstTerarangerRightDistPrev = obj.EstTerarangerRightDistPrev;
            cpObj.EstAirTimeSteps = obj.EstAirTimeSteps;
            
            % Recursively copy compound properties
            cpObj.Header = copy(obj.Header);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.EstMotPosLeft = strObj.EstMotPosLeft;
            obj.EstMotPosRight = strObj.EstMotPosRight;
            obj.EstMotVelLeft = strObj.EstMotVelLeft;
            obj.EstMotVelRight = strObj.EstMotVelRight;
            obj.EstHipPosLeft = strObj.EstHipPosLeft;
            obj.EstHipPosRight = strObj.EstHipPosRight;
            obj.EstHipVelLeft = strObj.EstHipVelLeft;
            obj.EstHipVelRight = strObj.EstHipVelRight;
            obj.EstHipTorqueLeft = strObj.EstHipTorqueLeft;
            obj.EstHipTorqueRight = strObj.EstHipTorqueRight;
            obj.EstImuPosRoll = strObj.EstImuPosRoll;
            obj.EstImuPosPitch = strObj.EstImuPosPitch;
            obj.EstImuPosYaw = strObj.EstImuPosYaw;
            obj.EstImuVelRoll = strObj.EstImuVelRoll;
            obj.EstImuVelPitch = strObj.EstImuVelPitch;
            obj.EstImuVelYaw = strObj.EstImuVelYaw;
            obj.EstImuLinAccX = strObj.EstImuLinAccX;
            obj.EstImuLinAccY = strObj.EstImuLinAccY;
            obj.EstImuLinAccZ = strObj.EstImuLinAccZ;
            obj.EstWheelPosLeft = strObj.EstWheelPosLeft;
            obj.EstWheelPosRight = strObj.EstWheelPosRight;
            obj.EstWheelVelLeft = strObj.EstWheelVelLeft;
            obj.EstWheelVelRight = strObj.EstWheelVelRight;
            obj.EstWheelPosLeftPrev = strObj.EstWheelPosLeftPrev;
            obj.EstWheelPosRightPrev = strObj.EstWheelPosRightPrev;
            obj.EstThetaLeft = strObj.EstThetaLeft;
            obj.EstThetaRight = strObj.EstThetaRight;
            obj.EstThetaMean = strObj.EstThetaMean;
            obj.EstThetaDotMean = strObj.EstThetaDotMean;
            obj.EstFiltThetaDotMean = strObj.EstFiltThetaDotMean;
            obj.EstLinVel = strObj.EstLinVel;
            obj.EstFiltCalLinVel = strObj.EstFiltCalLinVel;
            obj.EstFiltLinVel = strObj.EstFiltLinVel;
            obj.EstAngVel = strObj.EstAngVel;
            obj.EstFiltAngVel = strObj.EstFiltAngVel;
            obj.EstRobotXPos = strObj.EstRobotXPos;
            obj.EstRobotYPos = strObj.EstRobotYPos;
            obj.EstRobotGammaOrient = strObj.EstRobotGammaOrient;
            obj.EstRobotXPosPrev = strObj.EstRobotXPosPrev;
            obj.EstRobotYPosPrev = strObj.EstRobotYPosPrev;
            obj.EstRobotGammaOrientPrev = strObj.EstRobotGammaOrientPrev;
            obj.EstRobotRho = strObj.EstRobotRho;
            obj.EstRobotPsi = strObj.EstRobotPsi;
            obj.EstRobotBeta = strObj.EstRobotBeta;
            obj.EstRobotSPos = strObj.EstRobotSPos;
            obj.EstImuDriftYaw = strObj.EstImuDriftYaw;
            obj.EstImuPitchOffset = strObj.EstImuPitchOffset;
            obj.EstImuPitchOffsetCadError = strObj.EstImuPitchOffsetCadError;
            obj.EstFiltMotPosLeft = strObj.EstFiltMotPosLeft;
            obj.EstFiltMotPosRight = strObj.EstFiltMotPosRight;
            obj.EstFiltMotPosLeftPrev = strObj.EstFiltMotPosLeftPrev;
            obj.EstFiltMotPosRightPrev = strObj.EstFiltMotPosRightPrev;
            obj.EstMotPosAve = strObj.EstMotPosAve;
            obj.EstMotVelAve = strObj.EstMotVelAve;
            obj.EstTerarangerLeftDist = strObj.EstTerarangerLeftDist;
            obj.EstTerarangerRightDist = strObj.EstTerarangerRightDist;
            obj.EstTerarangerLeftDistPrev = strObj.EstTerarangerLeftDistPrev;
            obj.EstTerarangerRightDistPrev = strObj.EstTerarangerRightDistPrev;
            obj.EstAirTimeSteps = strObj.EstAirTimeSteps;
            obj.Header = feval([obj.StdMsgsHeaderClass '.loadobj'], strObj.Header);
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.EstMotPosLeft = obj.EstMotPosLeft;
            strObj.EstMotPosRight = obj.EstMotPosRight;
            strObj.EstMotVelLeft = obj.EstMotVelLeft;
            strObj.EstMotVelRight = obj.EstMotVelRight;
            strObj.EstHipPosLeft = obj.EstHipPosLeft;
            strObj.EstHipPosRight = obj.EstHipPosRight;
            strObj.EstHipVelLeft = obj.EstHipVelLeft;
            strObj.EstHipVelRight = obj.EstHipVelRight;
            strObj.EstHipTorqueLeft = obj.EstHipTorqueLeft;
            strObj.EstHipTorqueRight = obj.EstHipTorqueRight;
            strObj.EstImuPosRoll = obj.EstImuPosRoll;
            strObj.EstImuPosPitch = obj.EstImuPosPitch;
            strObj.EstImuPosYaw = obj.EstImuPosYaw;
            strObj.EstImuVelRoll = obj.EstImuVelRoll;
            strObj.EstImuVelPitch = obj.EstImuVelPitch;
            strObj.EstImuVelYaw = obj.EstImuVelYaw;
            strObj.EstImuLinAccX = obj.EstImuLinAccX;
            strObj.EstImuLinAccY = obj.EstImuLinAccY;
            strObj.EstImuLinAccZ = obj.EstImuLinAccZ;
            strObj.EstWheelPosLeft = obj.EstWheelPosLeft;
            strObj.EstWheelPosRight = obj.EstWheelPosRight;
            strObj.EstWheelVelLeft = obj.EstWheelVelLeft;
            strObj.EstWheelVelRight = obj.EstWheelVelRight;
            strObj.EstWheelPosLeftPrev = obj.EstWheelPosLeftPrev;
            strObj.EstWheelPosRightPrev = obj.EstWheelPosRightPrev;
            strObj.EstThetaLeft = obj.EstThetaLeft;
            strObj.EstThetaRight = obj.EstThetaRight;
            strObj.EstThetaMean = obj.EstThetaMean;
            strObj.EstThetaDotMean = obj.EstThetaDotMean;
            strObj.EstFiltThetaDotMean = obj.EstFiltThetaDotMean;
            strObj.EstLinVel = obj.EstLinVel;
            strObj.EstFiltCalLinVel = obj.EstFiltCalLinVel;
            strObj.EstFiltLinVel = obj.EstFiltLinVel;
            strObj.EstAngVel = obj.EstAngVel;
            strObj.EstFiltAngVel = obj.EstFiltAngVel;
            strObj.EstRobotXPos = obj.EstRobotXPos;
            strObj.EstRobotYPos = obj.EstRobotYPos;
            strObj.EstRobotGammaOrient = obj.EstRobotGammaOrient;
            strObj.EstRobotXPosPrev = obj.EstRobotXPosPrev;
            strObj.EstRobotYPosPrev = obj.EstRobotYPosPrev;
            strObj.EstRobotGammaOrientPrev = obj.EstRobotGammaOrientPrev;
            strObj.EstRobotRho = obj.EstRobotRho;
            strObj.EstRobotPsi = obj.EstRobotPsi;
            strObj.EstRobotBeta = obj.EstRobotBeta;
            strObj.EstRobotSPos = obj.EstRobotSPos;
            strObj.EstImuDriftYaw = obj.EstImuDriftYaw;
            strObj.EstImuPitchOffset = obj.EstImuPitchOffset;
            strObj.EstImuPitchOffsetCadError = obj.EstImuPitchOffsetCadError;
            strObj.EstFiltMotPosLeft = obj.EstFiltMotPosLeft;
            strObj.EstFiltMotPosRight = obj.EstFiltMotPosRight;
            strObj.EstFiltMotPosLeftPrev = obj.EstFiltMotPosLeftPrev;
            strObj.EstFiltMotPosRightPrev = obj.EstFiltMotPosRightPrev;
            strObj.EstMotPosAve = obj.EstMotPosAve;
            strObj.EstMotVelAve = obj.EstMotVelAve;
            strObj.EstTerarangerLeftDist = obj.EstTerarangerLeftDist;
            strObj.EstTerarangerRightDist = obj.EstTerarangerRightDist;
            strObj.EstTerarangerLeftDistPrev = obj.EstTerarangerLeftDistPrev;
            strObj.EstTerarangerRightDistPrev = obj.EstTerarangerRightDistPrev;
            strObj.EstAirTimeSteps = obj.EstAirTimeSteps;
            strObj.Header = saveobj(obj.Header);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.ascento_msgs.EstimatedStates.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.ascento_msgs.EstimatedStates;
            obj.reload(strObj);
        end
    end
end
